/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administrador;

import Administrador.sop_rmi.AdministradorImpl;
import Administrador.sop_rmi.AdministradorInt;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import servidor.sop_rmi.ServidorGestionInt;
import servidor.utilidades.UtilidadesConsola;


/**
 *
 * @author Breiner Mamian
 */
public class GUIAdmin extends javax.swing.JFrame {
    ServidorGestionInt obj;
    
    /**
     * Creates new form GUIAdmin
     */
    public GUIAdmin() throws RemoteException {
        ServidorGestionInt obj;
            int puerto = 0;
            System.out.println("Cual es el la dirección ip donde se encuentra  el rmiregistry ");
            String dirIP = UtilidadesConsola.leerCadena();
            System.out.println("Cual es el número de puerto por el cual escucha el rmiregistry ");
            puerto = UtilidadesConsola.leerEntero();
        initComponents();
        
        try
        {
            System.out.println("1");
            AdministradorInt objRemotoNotificacion;
            objRemotoNotificacion = new AdministradorImpl(this);
            String URLRegistro;
        URLRegistro = "rmi://" + dirIP + ":" + puerto + "/" + "ServidorUsuarios";
         System.out.println("2");
            obj=(ServidorGestionInt)Naming.lookup(URLRegistro);
             System.out.println("3");
            //obj
            obj.registrarObjetoRemotoAdministrador(objRemotoNotificacion);
            //obj.actualizarObjetoRemotoAdministrador();
             System.out.println("4");
        }
        catch (Exception e)
        {
            System.out.println("Excepcion en obtencion del objeto remoto"+ e);
        }
        this.setLocationRelativeTo(null);
            
    }
    public void fijarNumClientes(int numero) {
        System.out.println("Este método se invoca para informar al cliente de un mensaje nuevo en el chat");
        try {
            jTextAreaNumClientes.setText(""+numero);
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
    }
    public void fijarClienteUltMsj(String nombre) {
        System.out.println("Este método se invoca para informar al cliente de un mensaje nuevo en el chat");
        try {
            jTextAreaClienteMsj.setText(nombre);
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaNumClientes = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaClienteMsj = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(300, 200));
        setPreferredSize(new java.awt.Dimension(450, 350));
        getContentPane().setLayout(new java.awt.GridLayout(6, 0));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Administrador");
        getContentPane().add(jLabel3);

        jLabel1.setText("Cantidad de Clientes Conectados:");
        getContentPane().add(jLabel1);

        jTextAreaNumClientes.setColumns(20);
        jTextAreaNumClientes.setRows(5);
        jScrollPane1.setViewportView(jTextAreaNumClientes);

        getContentPane().add(jScrollPane1);

        jLabel2.setText("Cliente con más mensajes en el último mensaje:");
        getContentPane().add(jLabel2);

        jTextAreaClienteMsj.setColumns(20);
        jTextAreaClienteMsj.setRows(5);
        jScrollPane2.setViewportView(jTextAreaClienteMsj);

        getContentPane().add(jScrollPane2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUIAdmin().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(GUIAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaClienteMsj;
    private javax.swing.JTextArea jTextAreaNumClientes;
    // End of variables declaration//GEN-END:variables
}
